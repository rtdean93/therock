<?php
/**
 *@file
 *Tests for the Bobby posts module
 */

class BobbyPostsTestCase extends DrupalWebTestCase{
  public static function getInfo(){
    return array(
      'name' => 'Bobby posts module functionality',
      'description' => 'Test hooks in the Bobby posts module',
      'group' => 'Bobby posts',
    );
  }
  
  public function setUp(){
    parent::setUp('bobby');
  }

  public function testPermission(){
    $data = module_invoke('bobby', 'permission');
    
    $this->assertTrue(is_array($data), t('Permission hook returns array.'));
    
    $this->assertTrue(array_key_exists('access bobby content', $data), t('Permission is as expected.'));
  }
  
  public function testMenu(){
    $items = module_invoke('bobby', 'menu');
    
    $this->assertEqual(2, count($items), t('Two items in menu.'));
    
    $this->assertIdentical($items['admin/config/content/bobby']['title'], $items['bobby']['title'], t('Titles are identical.'));
  }

  public function testBlockView(){
    $data = module_invoke('bobby', 'block_view', 'bobby');

    $this->assertEqual(t('Bobby posts'), $data['subject'], t('Subject is as expected.'));

    $this->assertNotNull($data['content'], t('Block contains data.'));
  }
  
  public function testBlockInfo(){
    $info = module_invoke('bobby', 'block_info');
    
    $this->assertNotEqual('DRUPAL_CACHE_PER_USER', $info['bobby']['cache'], t('Cache is not set to DRUPAL_CACHE_PER_USER'));
    
    $this->assertFalse(count($info) > 1, t('No more than one block defined.'));
  }
  
  public function testBlock(){
    $info = module_invoke('bobby', 'block_info');
    $data = module_invoke('bobby', 'block_view', 'bobby');

    $this->assertIdentical($info['bobby']['info'], $data['subject'], t('Block list name and subject are identical.'));
  }

}